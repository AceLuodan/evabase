/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvaFlowChainLinkKeeperBot,
  EvaFlowChainLinkKeeperBotInterface,
} from "../EvaFlowChainLinkKeeperBot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_config",
        type: "address",
      },
      {
        internalType: "address",
        name: "_evaFlowChecker",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keeperRegistry",
        type: "address",
      },
      {
        internalType: "enum KeepNetWork",
        name: "keepNetWork",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract IEvabaseConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evaFlowChecker",
    outputs: [
      {
        internalType: "contract EvaFlowChecker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keepBotId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMoveTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setLastMoveTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000e0138038062000e018339810160408190526200003491620002da565b6200003f336200026b565b6001600160a01b0384166200008a5760405162461bcd60e51b815260206004820152600c60248201526b0c2c8c8cae6e640d2e64060f60a31b60448201526064015b60405180910390fd5b6001600160a01b038316620000d15760405162461bcd60e51b815260206004820152600c60248201526b0c2c8c8cae6e640d2e64060f60a31b604482015260640162000081565b6001600160a01b038216620001185760405162461bcd60e51b815260206004820152600c60248201526b0c2c8c8cae6e640d2e64060f60a31b604482015260640162000081565b600080546001600160a01b038087166001600160a01b0319928316811790935560018054918716919092161790556001600160601b0319606084901b16608052604051639ffd119960e01b8152639ffd1199906200017d90309085906004016200038a565b600060405180830381600087803b1580156200019857600080fd5b505af1158015620001ad573d6000803e3d6000fd5b505060005460405163055c2f8760e41b81526001600160a01b0390911692506355c2f8709150620001e3908490600401620003a9565b60206040518083038186803b158015620001fc57600080fd5b505afa15801562000211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023791906200033a565b6002805463ffffffff92909216600160a01b0263ffffffff60a01b1990921691909117905550504260035550620003bf9050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620002d557600080fd5b919050565b60008060008060808587031215620002f0578384fd5b620002fb85620002bd565b93506200030b60208601620002bd565b92506200031b60408601620002bd565b91506060850151600481106200032f578182fd5b939692955090935050565b6000602082840312156200034c578081fd5b815163ffffffff8116811462000360578182fd5b9392505050565b600481106200038657634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b03831681526040810162000360602083018462000367565b60208101620003b9828462000367565b92915050565b60805160601c610a23620003de60003960006105020152610a236000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638df48aa1116100665780638df48aa11461012657806392e8155414610139578063ec721f3a14610150578063f2fde38b14610158578063fbf8eacc1461016b57600080fd5b80634585e33b146100a35780636e04ff0d146100b8578063715018a6146100e257806379502c55146100ea5780638da5cb5b14610115575b600080fd5b6100b66100b136600461082c565b610197565b005b6100cb6100c636600461082c565b6101da565b6040516100d99291906108c5565b60405180910390f35b6100b6610228565b6000546100fd906001600160a01b031681565b6040516001600160a01b0390911681526020016100d9565b6002546001600160a01b03166100fd565b6001546100fd906001600160a01b031681565b61014260035481565b6040519081526020016100d9565b6100b6610293565b6100b66101663660046106d9565b6102ae565b60025461018290600160a01b900463ffffffff1681565b60405163ffffffff90911681526020016100d9565b6101d682828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061037992505050565b5050565b6000606061021d84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038a92505050565b909590945092505050565b6002546001600160a01b031633146102875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102916000610440565b565b600a600354426102a3919061096f565b106102915742600355565b6002546001600160a01b031633146103085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027e565b6001600160a01b03811661036d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027e565b61037681610440565b50565b610381610293565b61037681610492565b6001546002546003546040516318d4a07f60e21b8152600093606093859384936001600160a01b039093169263635281fc926103e092600160a01b90910463ffffffff1691621e8480918b918890600401610910565b60006040518083038186803b1580156103f857600080fd5b505afa15801561040c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104349190810190610770565b90969095509350505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008151116104e35760405162461bcd60e51b815260206004820152601960248201527f6578656320646174612073686f756c64206e6f74206e756c6c00000000000000604482015260640161027e565b604051631e12b8a560e01b8152326004820181905290600090819081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631e12b8a59060240160606040518083038186803b15801561054c57600080fd5b505afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190610718565b925092509250816105d75760405162461bcd60e51b815260206004820152601b60248201527f6e6f742061637469766520636869616e6c696e6b206163746976650000000000604482015260640161027e565b60008054906101000a90046001600160a01b03166001600160a01b031663d8de65876040518163ffffffff1660e01b815260040160206040518083038186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b91906106fc565b6001600160a01b0316635090321e86621e84806040518363ffffffff1660e01b815260040161068b9291906108e8565b600060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050505050505050565b805180151581146106d457600080fd5b919050565b6000602082840312156106ea578081fd5b81356106f5816109d8565b9392505050565b60006020828403121561070d578081fd5b81516106f5816109d8565b60008060006060848603121561072c578182fd5b8351610737816109d8565b9250610745602085016106c4565b915060408401516bffffffffffffffffffffffff81168114610765578182fd5b809150509250925092565b60008060408385031215610782578182fd5b61078b836106c4565b9150602083015167ffffffffffffffff808211156107a7578283fd5b818501915085601f8301126107ba578283fd5b8151818111156107cc576107cc6109c2565b604051601f8201601f19908116603f011681019083821181831017156107f4576107f46109c2565b8160405282815288602084870101111561080c578586fd5b61081d836020830160208801610992565b80955050505050509250929050565b6000806020838503121561083e578182fd5b823567ffffffffffffffff80821115610855578384fd5b818501915085601f830112610868578384fd5b813581811115610876578485fd5b866020828501011115610887578485fd5b60209290920196919550909350505050565b600081518084526108b1816020860160208601610992565b601f01601f19169290920160200192915050565b82151581526040602082015260006108e06040830184610899565b949350505050565b6040815260006108fb6040830185610899565b905063ffffffff831660208301529392505050565b600063ffffffff808816835280871660208401525060a0604083015261093960a0830186610899565b90508360608301526004831061095f57634e487b7160e01b600052602160045260246000fd5b8260808301529695505050505050565b60008282101561098d57634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156109ad578181015183820152602001610995565b838111156109bc576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461037657600080fdfea264697066735822122069ce2c14ecfd8b2575bd42787e6fdb96635580a30713443173b4c20e9b904e9164736f6c63430008040033";

export class EvaFlowChainLinkKeeperBot__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _config: string,
    _evaFlowChecker: string,
    _keeperRegistry: string,
    keepNetWork: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvaFlowChainLinkKeeperBot> {
    return super.deploy(
      _config,
      _evaFlowChecker,
      _keeperRegistry,
      keepNetWork,
      overrides || {}
    ) as Promise<EvaFlowChainLinkKeeperBot>;
  }
  getDeployTransaction(
    _config: string,
    _evaFlowChecker: string,
    _keeperRegistry: string,
    keepNetWork: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _config,
      _evaFlowChecker,
      _keeperRegistry,
      keepNetWork,
      overrides || {}
    );
  }
  attach(address: string): EvaFlowChainLinkKeeperBot {
    return super.attach(address) as EvaFlowChainLinkKeeperBot;
  }
  connect(signer: Signer): EvaFlowChainLinkKeeperBot__factory {
    return super.connect(signer) as EvaFlowChainLinkKeeperBot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvaFlowChainLinkKeeperBotInterface {
    return new utils.Interface(_abi) as EvaFlowChainLinkKeeperBotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvaFlowChainLinkKeeperBot {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EvaFlowChainLinkKeeperBot;
  }
}
