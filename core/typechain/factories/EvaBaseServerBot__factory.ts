/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvaBaseServerBot,
  EvaBaseServerBotInterface,
} from "../EvaBaseServerBot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_config",
        type: "address",
      },
      {
        internalType: "address",
        name: "_evaFlowChecker",
        type: "address",
      },
      {
        internalType: "enum KeepNetWork",
        name: "keepNetWork",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "SetEBSKeepStatus",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract IEvabaseConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_uint",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_bytes",
        type: "bytes[]",
      },
    ],
    name: "encodeTwoArr",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_bytes",
        type: "bytes",
      },
    ],
    name: "encodeUintAndBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_uint",
        type: "uint256[]",
      },
    ],
    name: "encodeUints",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evaFlowChecker",
    outputs: [
      {
        internalType: "contract EvaFlowChecker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keepBotId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "keeps",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "keep",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setEBSKeepStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f7938038062000f79833981016040819052620000349162000292565b6200003f3362000223565b6001600160a01b0383166200008a5760405162461bcd60e51b815260206004820152600c60248201526b0c2c8c8cae6e640d2e64060f60a31b60448201526064015b60405180910390fd5b6001600160a01b038216620000d15760405162461bcd60e51b815260206004820152600c60248201526b0c2c8c8cae6e640d2e64060f60a31b604482015260640162000081565b600080546001600160a01b038086166001600160a01b031992831617835560018054868316931692909217825533835260036020526040808420805460ff191690931790925591549051639ffd119960e01b8152911690639ffd11999062000140903090859060040162000331565b600060405180830381600087803b1580156200015b57600080fd5b505af115801562000170573d6000803e3d6000fd5b505060005460405163055c2f8760e41b81526001600160a01b0390911692506355c2f8709150620001a690849060040162000350565b60206040518083038186803b158015620001bf57600080fd5b505afa158015620001d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001fa9190620002e1565b600260146101000a81548163ffffffff021916908363ffffffff16021790555050505062000366565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200028d57600080fd5b919050565b600080600060608486031215620002a7578283fd5b620002b28462000275565b9250620002c26020850162000275565b9150604084015160048110620002d6578182fd5b809150509250925092565b600060208284031215620002f3578081fd5b815163ffffffff8116811462000307578182fd5b9392505050565b600481106200032d57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0383168152604081016200030760208301846200030e565b602081016200036082846200030e565b92915050565b610c0380620003766000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638318342e1161008c578063a49fe72411610066578063a49fe724146101b0578063c156e62f146101e3578063f2fde38b146101f6578063fbf8eacc1461020957600080fd5b80638318342e146101795780638da5cb5b1461018c5780638df48aa11461019d57600080fd5b80632ba14042146100d45780634585e33b146100e95780636ce4d73e146100fc5780636e04ff0d14610125578063715018a61461014657806379502c551461014e575b600080fd5b6100e76100e23660046107a5565b610235565b005b6100e76100f73660046108ee565b6102c7565b61010f61010a36600461095b565b61030a565b60405161011c9190610ac4565b60405180910390f35b6101386101333660046108ee565b610336565b60405161011c929190610aa9565b6100e7610384565b600054610161906001600160a01b031681565b6040516001600160a01b03909116815260200161011c565b61010f6101873660046107e1565b6103ba565b6002546001600160a01b0316610161565b600154610161906001600160a01b031681565b6101d36101be366004610766565b60036020526000908152604090205460ff1681565b604051901515815260200161011c565b61010f6101f136600461081c565b6103e3565b6100e7610204366004610766565b6103f8565b60025461022090600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161011c565b6002546001600160a01b031633146102685760405162461bcd60e51b815260040161025f90610aff565b60405180910390fd5b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527fc2ba3c8a415fa8c0e016b11260f7eab627aa1781681db036e86b836f3bf1a581910160405180910390a25050565b61030682828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061049392505050565b5050565b6060828260405160200161031f929190610b34565b604051602081830303815290604052905092915050565b6000606061037984848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061049c92505050565b915091509250929050565b6002546001600160a01b031633146103ae5760405162461bcd60e51b815260040161025f90610aff565b6103b860006104a1565b565b6060816040516020016103cd9190610a25565b6040516020818303038152906040529050919050565b6060828260405160200161031f929190610a38565b6002546001600160a01b031633146104225760405162461bcd60e51b815260040161025f90610aff565b6001600160a01b0381166104875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025f565b610490816104a1565b50565b610490816104f3565b600191565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008151116105445760405162461bcd60e51b815260206004820152601960248201527f6578656320646174612073686f756c64206e6f74206e756c6c00000000000000604482015260640161025f565b3260009081526003602052604090205460ff166105a35760405162461bcd60e51b815260206004820152601b60248201527f6e6f742061637469766520636869616e6c696e6b206163746976650000000000604482015260640161025f565b60008054906101000a90046001600160a01b03166001600160a01b031663d8de65876040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ef57600080fd5b505afa158015610603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106279190610789565b6001600160a01b0316635090321e82627a12006040518363ffffffff1660e01b8152600401610657929190610ad7565b600060405180830381600087803b15801561067157600080fd5b505af1158015610685573d6000803e3d6000fd5b5050505050565b600082601f83011261069c578081fd5b813560206106b16106ac83610b7e565b610b4d565b80838252828201915082860187848660051b89010111156106d0578586fd5b855b858110156106ee578135845292840192908401906001016106d2565b5090979650505050505050565b600082601f83011261070b578081fd5b813567ffffffffffffffff81111561072557610725610ba2565b610738601f8201601f1916602001610b4d565b81815284602083860101111561074c578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610777578081fd5b813561078281610bb8565b9392505050565b60006020828403121561079a578081fd5b815161078281610bb8565b600080604083850312156107b7578081fd5b82356107c281610bb8565b9150602083013580151581146107d6578182fd5b809150509250929050565b6000602082840312156107f2578081fd5b813567ffffffffffffffff811115610808578182fd5b6108148482850161068c565b949350505050565b6000806040838503121561082e578182fd5b823567ffffffffffffffff80821115610845578384fd5b6108518683870161068c565b9350602091508185013581811115610867578384fd5b8501601f81018713610877578384fd5b80356108856106ac82610b7e565b8082825285820191508584018a878560051b87010111156108a4578788fd5b875b848110156108dd578135878111156108bc57898afd5b6108ca8d8a838a01016106fb565b85525092870192908701906001016108a6565b50979a909950975050505050505050565b60008060208385031215610900578182fd5b823567ffffffffffffffff80821115610917578384fd5b818501915085601f83011261092a578384fd5b813581811115610938578485fd5b866020828501011115610949578485fd5b60209290920196919550909350505050565b6000806040838503121561096d578182fd5b82359150602083013567ffffffffffffffff81111561098a578182fd5b610996858286016106fb565b9150509250929050565b6000815180845260208085019450808401835b838110156109cf578151875295820195908201906001016109b3565b509495945050505050565b60008151808452815b818110156109ff576020818501810151868301820152016109e3565b81811115610a105782602083870101525b50601f01601f19169290920160200192915050565b60208152600061078260208301846109a0565b604081526000610a4b60408301856109a0565b6020838203818501528185518084528284019150828160051b850101838801865b83811015610a9a57601f19878403018552610a888383516109da565b94860194925090850190600101610a6c565b50909998505050505050505050565b821515815260406020820152600061081460408301846109da565b60208152600061078260208301846109da565b604081526000610aea60408301856109da565b905063ffffffff831660208301529392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b82815260406020820152600061081460408301846109da565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b7657610b76610ba2565b604052919050565b600067ffffffffffffffff821115610b9857610b98610ba2565b5060051b60200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461049057600080fdfea26469706673582212207b05dcdb3214c756fb141b6cff61c514964c0628fb9b081c071888c7e9a1ab3064736f6c63430008040033";

export class EvaBaseServerBot__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _config: string,
    _evaFlowChecker: string,
    keepNetWork: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvaBaseServerBot> {
    return super.deploy(
      _config,
      _evaFlowChecker,
      keepNetWork,
      overrides || {}
    ) as Promise<EvaBaseServerBot>;
  }
  getDeployTransaction(
    _config: string,
    _evaFlowChecker: string,
    keepNetWork: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _config,
      _evaFlowChecker,
      keepNetWork,
      overrides || {}
    );
  }
  attach(address: string): EvaBaseServerBot {
    return super.attach(address) as EvaBaseServerBot;
  }
  connect(signer: Signer): EvaBaseServerBot__factory {
    return super.connect(signer) as EvaBaseServerBot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvaBaseServerBotInterface {
    return new utils.Interface(_abi) as EvaBaseServerBotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvaBaseServerBot {
    return new Contract(address, _abi, signerOrProvider) as EvaBaseServerBot;
  }
}
