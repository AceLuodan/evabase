/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UintLibSingleListTest,
  UintLibSingleListTestInterface,
} from "../UintLibSingleListTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "count",
        type: "uint16",
      },
    ],
    name: "log2",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "add1Value",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "arr",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "getRange",
    outputs: [
      {
        internalType: "uint256[]",
        name: "arr",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getall",
    outputs: [
      {
        internalType: "uint256[]",
        name: "arr",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getsize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allVaildSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "keepBotSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "keepbotId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "batch",
        type: "uint32",
      },
    ],
    name: "testMath",
    outputs: [
      {
        internalType: "uint256[]",
        name: "arr",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "testRemove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108d9806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063909747951161005b57806390974795146100ce5780639507d39a146100d6578063bee48161146100e9578063f5441d17146100fc57600080fd5b80632ae86866146100825780634200f08a1461009957806355496b2f146100ae575b600080fd5b6001545b6040519081526020015b60405180910390f35b6100ac6100a736600461077e565b610114565b005b6100c16100bc3660046107b7565b610122565b60405161009091906107ff565b6100c16101c1565b6100866100e436600461077e565b6101cd565b6100ac6100f736600461077e565b6101df565b6100c161010a366004610796565b6101ea565b905090565b61011f6000826101ff565b50565b606060008061013387878787610363565b60408051600280825260608201909252929450909250816020016020820280368337019050509250818360008151811061017d57634e487b7160e01b600052603260045260246000fd5b60200260200101818152505080836001815181106101ab57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050949350505050565b606061010f6000610471565b60006101d981836104cd565b92915050565b61011f600082610505565b60606101f8600084846105fc565b9392505050565b60008181526020839052604090205461026b5760405162461bcd60e51b815260206004820152602360248201527f4c6962416464726573735365743a2076616c756520646f65736e27742065786960448201526239ba1760e91b60648201526084015b60405180910390fd5b6000818152602083905260408120546102869060019061085b565b60018481015491925060009161029c919061085b565b905060008460010182815481106102c357634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808560010184815481106102f457634e487b7160e01b600052603260045260246000fd5b60009182526020909120015561030b836001610843565b60008281526020879052604080822092909255858152908120556001850180548061034657634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590555050505050565b6000806000851180156103765750600086115b80156103825750600084115b6103b75760405162461bcd60e51b8152600401610262906020808252600490820152630677420360e41b604082015260600190565b848611156104625760008587816103de57634e487b7160e01b600052601260045260246000fd5b049050600086888161040057634e487b7160e01b600052601260045260246000fd5b0690508015610410576001909101905b63ffffffff851682118015610429578563ffffffff1692505b826001880302600101945082870293508015801561044657508115155b801561045157508787145b1561045a578893505b505050610468565b50829050805b94509492505050565b6060816001018054806020026020016040519081016040528092919081815260200182805480156104c157602002820191906000526020600020905b8154815260200190600101908083116104ad575b50505050509050919050565b60008260010182815481106104f257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b8061055c5760405162461bcd60e51b815260206004820152602160248201527f4c6962416464726573735365743a2076616c75652063616e27742062652030786044820152600360fc1b6064820152608401610262565b600081815260208390526040902054156105d05760405162461bcd60e51b815260206004820152602f60248201527f4c6962416464726573735365743a2076616c756520616c72656164792065786960448201526e39ba399034b7103a34329039b2ba1760891b6064820152608401610262565b600180830180549182018155600081815260208082209093018490559054928152929052604090912055565b6060818311156106465760405162461bcd60e51b81526020600482015260156024820152740cce4deda92dcc8caf040cee840cadcc892dcc8caf605b1b6044820152606401610262565b60018401548211156106925760405162461bcd60e51b8152602060048201526015602482015274195b99125b99195e08195e18d9595908189bdd5b99605a1b6044820152606401610262565b600061069e848461085b565b67ffffffffffffffff8111156106c457634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106ed578160200160208202803683370190505b5090506000845b848110156107735786600101818154811061071f57634e487b7160e01b600052603260045260246000fd5b906000526020600020015483838061073690610872565b94508151811061075657634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061076b81610872565b9150506106f4565b509095945050505050565b60006020828403121561078f578081fd5b5035919050565b600080604083850312156107a8578081fd5b50508035926020909101359150565b600080600080608085870312156107cc578182fd5b843593506020850135925060408501359150606085013563ffffffff811681146107f4578182fd5b939692955090935050565b6020808252825182820181905260009190848201906040850190845b818110156108375783518352928401929184019160010161081b565b50909695505050505050565b600082198211156108565761085661088d565b500190565b60008282101561086d5761086d61088d565b500390565b60006000198214156108865761088661088d565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220186a66a2d71acf20f21cd6aa7eb1a0644f2be813f505cfa8102e1beaa8bb235b64736f6c63430008040033";

export class UintLibSingleListTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UintLibSingleListTest> {
    return super.deploy(overrides || {}) as Promise<UintLibSingleListTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UintLibSingleListTest {
    return super.attach(address) as UintLibSingleListTest;
  }
  connect(signer: Signer): UintLibSingleListTest__factory {
    return super.connect(signer) as UintLibSingleListTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UintLibSingleListTestInterface {
    return new utils.Interface(_abi) as UintLibSingleListTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UintLibSingleListTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UintLibSingleListTest;
  }
}
