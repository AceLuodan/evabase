/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvaFlowChecker,
  EvaFlowCheckerInterface,
} from "../EvaFlowChecker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_config",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "keepbotId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "checkGasLimit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "checkdata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "lastMoveTime",
        type: "uint256",
      },
      {
        internalType: "enum KeepNetWork",
        name: "keepNetWork",
        type: "uint8",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "needExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkGasLimitMin",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract IEvabaseConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class EvaFlowChecker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _config: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvaFlowChecker> {
    return super.deploy(_config, overrides || {}) as Promise<EvaFlowChecker>;
  }
  getDeployTransaction(
    _config: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_config, overrides || {});
  }
  attach(address: string): EvaFlowChecker {
    return super.attach(address) as EvaFlowChecker;
  }
  connect(signer: Signer): EvaFlowChecker__factory {
    return super.connect(signer) as EvaFlowChecker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvaFlowCheckerInterface {
    return new utils.Interface(_abi) as EvaFlowCheckerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvaFlowChecker {
    return new Contract(address, _abi, signerOrProvider) as EvaFlowChecker;
  }
}
