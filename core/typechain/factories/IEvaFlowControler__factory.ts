/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IEvaFlowControler,
  IEvaFlowControlerInterface,
} from "../IEvaFlowControler";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "flowAdd",
        type: "address",
      },
    ],
    name: "FlowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
    ],
    name: "FlowDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sucesss",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payAmountByETH",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payAmountByFeeToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    name: "FlowExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
    ],
    name: "FlowPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
    ],
    name: "FlowStart",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "flowAdd",
        type: "address",
      },
    ],
    name: "FlowUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeRecived",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "minGasFundForUser",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "minGasFundOneFlow",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "PPB",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "blockCountPerTurn",
        type: "uint16",
      },
    ],
    name: "SetMinConfig",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAdress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addFundByUser",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "batchExecFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "createEvaSafes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "flowName",
        type: "string",
      },
      {
        internalType: "enum KeepNetWork",
        name: "keepNetWork",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "flowCode",
        type: "bytes",
      },
    ],
    name: "createFlow",
    outputs: [
      {
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "add",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
    ],
    name: "destroyFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_inputData",
        type: "bytes",
      },
    ],
    name: "execFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVaildFlowSize",
    outputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFlowMetas",
    outputs: [
      {
        components: [
          {
            internalType: "enum FlowStatus",
            name: "flowStatus",
            type: "uint8",
          },
          {
            internalType: "enum KeepNetWork",
            name: "keepNetWork",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address",
            name: "lastKeeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "lastVersionflow",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastExecNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVaildBlockNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "flowName",
            type: "string",
          },
        ],
        internalType: "struct IEvaFlowControler.EvaFlowMeta",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getIndexVaildFlow",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getSafes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "getVaildFlowRange",
    outputs: [
      {
        internalType: "uint256[]",
        name: "arr",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
    ],
    name: "pauseFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
    ],
    name: "startFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_flowId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_flowName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "flowCode",
        type: "bytes",
      },
    ],
    name: "updateFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAdress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFundByUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAdress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IEvaFlowControler__factory {
  static readonly abi = _abi;
  static createInterface(): IEvaFlowControlerInterface {
    return new utils.Interface(_abi) as IEvaFlowControlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEvaFlowControler {
    return new Contract(address, _abi, signerOrProvider) as IEvaFlowControler;
  }
}
