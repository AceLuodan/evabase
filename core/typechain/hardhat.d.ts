/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "EvaBaseServerBot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvaBaseServerBot__factory>;
    getContractFactory(
      name: "EvaFlowChainLinkKeeperBot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvaFlowChainLinkKeeperBot__factory>;
    getContractFactory(
      name: "EvabaseConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvabaseConfig__factory>;
    getContractFactory(
      name: "EvaFlowChecker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvaFlowChecker__factory>;
    getContractFactory(
      name: "EvaFlowControler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvaFlowControler__factory>;
    getContractFactory(
      name: "IEvabaseConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvabaseConfig__factory>;
    getContractFactory(
      name: "IEvaFlow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvaFlow__factory>;
    getContractFactory(
      name: "IEvaFlowControler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvaFlowControler__factory>;
    getContractFactory(
      name: "IEvaSafes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvaSafes__factory>;
    getContractFactory(
      name: "IEvaSafesFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvaSafesFactory__factory>;
    getContractFactory(
      name: "KeeperCompatibleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KeeperCompatibleInterface__factory>;
    getContractFactory(
      name: "KeeperRegistryBaseInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KeeperRegistryBaseInterface__factory>;
    getContractFactory(
      name: "KeeperRegistryExecutableInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KeeperRegistryExecutableInterface__factory>;
    getContractFactory(
      name: "KeeperRegistryInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KeeperRegistryInterface__factory>;
    getContractFactory(
      name: "UpkeepRegistrationRequestsInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpkeepRegistrationRequestsInterface__factory>;
    getContractFactory(
      name: "EvaKeepBotBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvaKeepBotBase__factory>;
    getContractFactory(
      name: "NftLimitOrderFlow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NftLimitOrderFlow__factory>;
    getContractFactory(
      name: "IEvaFlowTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvaFlowTest__factory>;
    getContractFactory(
      name: "UintLibSingleListTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UintLibSingleListTest__factory>;
    getContractFactory(
      name: "EvaSafes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvaSafes__factory>;
    getContractFactory(
      name: "EvaSafesFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvaSafesFactory__factory>;

    getContractAt(
      name: "LinkTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "EvaBaseServerBot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvaBaseServerBot>;
    getContractAt(
      name: "EvaFlowChainLinkKeeperBot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvaFlowChainLinkKeeperBot>;
    getContractAt(
      name: "EvabaseConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvabaseConfig>;
    getContractAt(
      name: "EvaFlowChecker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvaFlowChecker>;
    getContractAt(
      name: "EvaFlowControler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvaFlowControler>;
    getContractAt(
      name: "IEvabaseConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvabaseConfig>;
    getContractAt(
      name: "IEvaFlow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvaFlow>;
    getContractAt(
      name: "IEvaFlowControler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvaFlowControler>;
    getContractAt(
      name: "IEvaSafes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvaSafes>;
    getContractAt(
      name: "IEvaSafesFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvaSafesFactory>;
    getContractAt(
      name: "KeeperCompatibleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KeeperCompatibleInterface>;
    getContractAt(
      name: "KeeperRegistryBaseInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KeeperRegistryBaseInterface>;
    getContractAt(
      name: "KeeperRegistryExecutableInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KeeperRegistryExecutableInterface>;
    getContractAt(
      name: "KeeperRegistryInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KeeperRegistryInterface>;
    getContractAt(
      name: "UpkeepRegistrationRequestsInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpkeepRegistrationRequestsInterface>;
    getContractAt(
      name: "EvaKeepBotBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvaKeepBotBase>;
    getContractAt(
      name: "NftLimitOrderFlow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NftLimitOrderFlow>;
    getContractAt(
      name: "IEvaFlowTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvaFlowTest>;
    getContractAt(
      name: "UintLibSingleListTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UintLibSingleListTest>;
    getContractAt(
      name: "EvaSafes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvaSafes>;
    getContractAt(
      name: "EvaSafesFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvaSafesFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
